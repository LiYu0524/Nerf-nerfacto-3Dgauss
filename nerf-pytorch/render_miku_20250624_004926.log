/nvme/liyu/nerf3dgs/nerf-pytorch/run_nerf.py:245: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(ckpt_path)
自动选择配置文件: logs/colmap_test/config.txt
配置文件: logs/colmap_test/config.txt
模型目录: logs/colmap_test
轨迹类型: miku
输出文件: miku_render.mp4
加载模型...
自动选择检查点: logs/colmap_test/080000.tar
Found ckpts ['logs/colmap_test/080000.tar']
Reloading from logs/colmap_test/080000.tar
Not ndc!
创建相机轨迹...
相机轨迹形状: torch.Size([900, 4, 4])
帧率: 30.0
总帧数: 900
开始渲染...
  0%|          | 0/900 [00:00<?, ?it/s]  0%|          | 1/900 [00:25<6:19:43, 25.34s/it]  0%|          | 2/900 [00:50<6:17:42, 25.24s/it]  0%|          | 3/900 [01:15<6:17:36, 25.26s/it]  0%|          | 4/900 [01:41<6:17:54, 25.31s/it]  1%|          | 5/900 [02:06<6:17:48, 25.33s/it]  1%|          | 6/900 [02:31<6:17:34, 25.34s/it]  1%|          | 7/900 [02:57<6:17:23, 25.36s/it]  1%|          | 8/900 [03:22<6:17:07, 25.37s/it]  1%|          | 9/900 [03:48<6:16:48, 25.37s/it]  1%|          | 10/900 [04:13<6:16:27, 25.38s/it]  1%|          | 11/900 [04:38<6:16:03, 25.38s/it]  1%|▏         | 12/900 [05:04<6:15:39, 25.38s/it]  1%|▏         | 13/900 [05:29<6:15:14, 25.38s/it]  2%|▏         | 14/900 [05:54<6:14:49, 25.38s/it]  2%|▏         | 15/900 [06:20<6:14:23, 25.38s/it]  2%|▏         | 16/900 [06:45<6:13:58, 25.38s/it]